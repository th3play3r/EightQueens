<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZnGGUBZBqNYAAAAASUVORK5CYII=
</value>
  </data>
</root>